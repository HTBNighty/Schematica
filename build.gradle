buildscript {
    repositories {
        mavenCentral()
        jcenter()
        maven {
            name = 'gradle plugins'
            url "https://plugins.gradle.org/m2/"
        }
        maven {
            name = 'forge'
            url = 'http://files.minecraftforge.net/maven'
        }
        maven {
            name = 'sonatype'
            url = 'https://oss.sonatype.org/content/repositories/snapshots/'
        }
        maven {
            name = 'SpongePowered'
            url = 'https://repo.spongepowered.org/repository/maven-public/'
        }
    }
    dependencies {
        classpath 'net.minecraftforge.gradle:ForgeGradle:3.+'
        classpath 'org.spongepowered:mixingradle:0.7-SNAPSHOT'
        classpath 'com.github.jengelman.gradle.plugins:shadow:4.0.4'
        classpath 'gradle.plugin.com.matthewprenger:CurseGradle:1.0.9'
    }
}

apply plugin: 'net.minecraftforge.gradle'
apply plugin: 'org.spongepowered.mixin'
apply plugin: 'com.matthewprenger.cursegradle'
apply plugin: 'com.github.johnrengelman.shadow'

ext.modversion = "2.0"

group = 'com.github.lunatrius'
version = "2.0"

sourceCompatibility = '1.8'
targetCompatibility = '1.8'

compileJava {
    sourceCompatibility = '1.8'
    targetCompatibility = '1.8'

    options.encoding = 'UTF-8'
}

minecraft {
    mappings channel: 'snapshot', version: '20171010-1.12'
    accessTransformer = file('src/main/resources/META-INF/schematica_at.cfg')

    // Credit: Kami Blue
    runs {
        client {
            workingDirectory project.file('run')

            property 'fml.coreMods.load', 'com.github.lunatrius.schematica.mixin.MixinLoader'
            property 'mixin.env.disableRefMap', 'true' // Disable refmap so we don't get trolled by Baritone

            property 'forge.logging.markers', 'SCAN,REGISTRIES,REGISTRYDUMP'
            property 'forge.logging.console.level', 'debug'
        }
    }
}

processResources {
    // this will ensure that this task is redone when the versions change.
    inputs.property 'version', project.version

    from(sourceSets.main.resources.srcDirs) {
        include 'mcmod.info'

        expand([
                'modid'          : project.name,
                'version'        : modversion,
                'mcversion'      : project.version_minecraft,
                'forgeversion'   : project.version_forge,
                'minforgeversion': project.hasProperty('version_minforge') ? project.version_minforge : project.version_forge,
                'coreversion'    : project.version_lunatriuscore
        ])
    }

    from(sourceSets.main.resources.srcDirs) {
        exclude 'mcmod.info'
    }
}

repositories {
    ivy {
        name = 'lunatrius\' ivy repo'
        url 'http://mc.lunatri.us/files'
    }
    maven {
        name = 'spongepowered-repo'
        url = 'https://repo.spongepowered.org/repository/maven-public/'
    }
}

dependencies {
    minecraft "net.minecraftforge:forge:1.12.2-14.23.5.2854"

    implementation fg.deobf(group: group, name: 'LunatriusCore', version: "${project.version_minecraft}-${project.version_lunatriuscore}", classifier: 'universal')

    implementation ('org.spongepowered:mixin:0.7.11-SNAPSHOT') {
        exclude module: 'commons-io'
        exclude module: 'gson'
        exclude module: 'guava'
        exclude module: 'launchwrapper'
        exclude module: 'log4j-core'
    }

    // Credit: Kami Blue
    annotationProcessor('org.spongepowered:mixin:0.8.2:processor') {
        exclude module: 'gson'
    }
}

shadowJar {
    dependencies {
        include(dependency('org.spongepowered:mixin'))
        include(dependency('net.jodah:typetools'))
        include(dependency('org.yaml:snakeyaml'))
        include(dependency('org.reflections:reflections'))
        include(dependency('org.javassist:javassist'))
    }
    exclude 'dummyThing'
    exclude 'LICENSE.txt'
    classifier = 'release'
}

mixin {
    defaultObfuscationEnv "searge"
    add sourceSets.main, 'mixins.mapmatica.refmap.json'
}

reobf {
    shadowJar {
        classpath = sourceSets.main.compileClasspath
    }
}

jar {
    manifest {
        attributes(
                'Manifest-Version': 1.0,
                'MixinConfigs': 'mixins.mapmatica.json',
                'TweakClass': 'org.spongepowered.asm.launch.MixinTweaker',
                'TweakOrder': 0,
                'FMLCorePluginContainsFMLMod': 'true',
                'FMLCorePlugin': 'com.github.lunatrius.schematica.mixin.MixinLoader',
                'ForceLoadAsMod': 'true',
                'FMLAT': 'schematica_at.cfg'
        )
    }
}

build.dependsOn(shadowJar)